#include <stdio.h>
void main()
{
 int i, j, temp; 
 int a[10]; 
 for (i = 0; i < 10; i++)  
 {
  scanf("%d,", &a[i]);
 } 
 for (j = 0; j < 9; j++)
 {
    for (i = 0; i < 9 - j; i++)
	{
       if (a[i] > a[i + 1])
	   {
        temp = a[i]; 
        a[i] = a[i + 1]; 
        a[i + 1] = temp;
	   }
	}
 } 
 for (i = 0; i < 10; i++)
 {
  printf("%d,", a[i]);
 } 
 printf("\n");
}  

冒泡算法的原理：
升序冒泡：
两次循环，相邻元素两两比较，如果前面的大于后面的就交换位置

降序冒泡：
两次循环，相邻元素两两比较，如果前面的小于后面的就交换位置

时间复杂度（大O计数法）：O(n^2)

js实现
function bubbleSort(arr) {
    for (let i = 0; i < arr.length; i++) {
        for (let j = 0; j < arr.length - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                const temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
    console.log(arr);
}

// 升序冒泡
function bubbleSort(arr){
  const array = [...arr]
  for(let i = array.length; i > 0; i--){
    for(let j =0; j < i - 1; j++) {
      if (array[j] > array[j + 1]) {
        let temp = array[j]
        array[j] = array[j + 1]
        array[j + 1] = temp
      }
    }
  }
  return array
}