前端基础面试题
1.CSS三角形

2.CSS两栏布局
3.ajax请求
get请求:
//步骤一:创建异步对象
var ajax = new XMLHttpRequest();
//步骤二:设置请求的url参数,参数一是请求的类型,参数二是请求的url,可以带参数,动态的传递参数starName到服务端
ajax.open('get','getStar.php?starName='+name);
//步骤三:发送请求
ajax.send();
//步骤四:注册事件 onreadystatechange 状态改变就会调用
ajax.onreadystatechange = function () {
   if (ajax.readyState==4 &&ajax.status==200) {
    //步骤五 如果能够进到这个判断 说明 数据 完美的回来了,并且请求的页面是存在的
　　　　console.log(ajax.responseText);//输入相应的内容
  　　}
}
post请求:
//创建异步对象  
var xhr = new XMLHttpRequest();
//设置请求的类型及url
//post请求一定要添加请求头才行不然会报错
xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
 xhr.open('post', '02.post.php' );
//发送请求
xhr.send('name=fox&age=18');
xhr.onreadystatechange = function () {
    // 这步为判断服务器是否正确响应
  if (xhr.readyState == 4 && xhr.status == 200) {
    console.log(xhr.responseText);
  } 
};
封装:
function ajax_method(url,data,method,success) {
    // 异步对象
    var ajax = new XMLHttpRequest();

    // get 跟post  需要分别写不同的代码
    if (method=='get') {
        // get请求
        if (data) {
            // 如果有值
            url+='?';
            url+=data;
        }else{

        }
        // 设置 方法 以及 url
        ajax.open(method,url);

        // send即可
        ajax.send();
    }else{
        // post请求
        // post请求 url 是不需要改变
        ajax.open(method,url);

        // 需要设置请求报文
        ajax.setRequestHeader("Content-type","application/x-www-form-urlencoded");

        // 判断data send发送数据
        if (data) {
            // 如果有值 从send发送
            ajax.send(data);
        }else{
            // 木有值 直接发送即可
            ajax.send();
        }
    }

    // 注册事件
    ajax.onreadystatechange = function () {
        // 在事件中 获取数据 并修改界面显示
        if (ajax.readyState==4&&ajax.status==200) {
            // console.log(ajax.responseText);

            // 将 数据 让 外面可以使用
            // return ajax.responseText;

            // 当 onreadystatechange 调用时 说明 数据回来了
            // ajax.responseText;

            // 如果说 外面可以传入一个 function 作为参数 success
            success(ajax.responseText);
        }
    }

}



4.千分制
5.display:block inline  inline-block 区别
6.typeof的全部结果
7.dom的添加,替换,移除查找

8.sessionstorage  localstorage  cookies  区别

小米前端笔试
1.爬虫引擎是怎么抓取页面的
2.浏览器渲染页面的过程
3.异步编程的四种方法
4.解释异步同步,阻塞非阻塞,并行并发之间的区别
5.js实现数字千分位
6.多语言网站建设应注意哪些事项
7.react非父子,兄弟组件传值
8.123456789876543212345678987654321...的第N位是什么?
面试
1.浏览器打开一个页面前端缓存了那些东西?
2.vue的生命周期
3.博客用的koa,express
4.博客用的什么服务器
5.实现Promise
6.webpack插件
7.new一个对象发生了什么
8.响应式网站
9.原型和原型链
10.正则
11.封装axios
12.前后分离的系统,一个请求出错,如何中断其他请求
13.如何在axios中添加登陆请求
14.rollup?
15.